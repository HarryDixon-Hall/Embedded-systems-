;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 03/10/2025 10:39:53
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF55  	GOTO        170
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Delay_100ms:
;__lib_delays.c, 108 :: 		void Delay_100ms()
;__lib_delays.c, 110 :: 		Delay_ms( 100 );
0x001C	0x0E05      	MOVLW       5
0x001E	0x6E0B      	MOVWF       R11, 0
0x0020	0x0E0F      	MOVLW       15
0x0022	0x6E0C      	MOVWF       R12, 0
0x0024	0x0EF1      	MOVLW       241
0x0026	0x6E0D      	MOVWF       R13, 0
L_Delay_100ms20:
0x0028	0x2E0D      	DECFSZ      R13, 1, 0
0x002A	0xD7FE      	BRA         L_Delay_100ms20
0x002C	0x2E0C      	DECFSZ      R12, 1, 0
0x002E	0xD7FC      	BRA         L_Delay_100ms20
0x0030	0x2E0B      	DECFSZ      R11, 1, 0
0x0032	0xD7FA      	BRA         L_Delay_100ms20
;__lib_delays.c, 111 :: 		}
L_end_Delay_100ms:
0x0034	0x0012      	RETURN      0
; end of _Delay_100ms
_shift_right:
;main.c, 33 :: 		void shift_right(){
;main.c, 35 :: 		for(i = 7; i > 0; --i) {
0x0036	0x0E07      	MOVLW       7
0x0038	0x6E15      	MOVWF       shift_right_i_L0 
L_shift_right3:
0x003A	0x5015      	MOVF        shift_right_i_L0, 0 
0x003C	0x0800      	SUBLW       0
0x003E	0xE20F      	BC          L_shift_right4
;main.c, 36 :: 		LATC = (1 << i);
0x0040	0xF001C015  	MOVFF       shift_right_i_L0, R1
0x0044	0x0E01      	MOVLW       1
0x0046	0x6E00      	MOVWF       R0 
0x0048	0x5001      	MOVF        R1, 0 
L__shift_right14:
0x004A	0xE004      	BZ          L__shift_right15
0x004C	0x3600      	RLCF        R0, 1 
0x004E	0x9000      	BCF         R0, 0 
0x0050	0x0FFF      	ADDLW       255
0x0052	0xD7FB      	BRA         L__shift_right14
L__shift_right15:
0x0054	0xFF8BC000  	MOVFF       R0, LATC
;main.c, 37 :: 		Delay_100ms();
0x0058	0xDFE1      	RCALL       _Delay_100ms
;main.c, 38 :: 		}
;main.c, 35 :: 		for(i = 7; i > 0; --i) {
0x005A	0x0615      	DECF        shift_right_i_L0, 1 
;main.c, 38 :: 		}
0x005C	0xD7EE      	BRA         L_shift_right3
L_shift_right4:
;main.c, 39 :: 		}
L_end_shift_right:
0x005E	0x0012      	RETURN      0
; end of _shift_right
___CC2DW:
;__Lib_System.c, 24 :: 		void __CC2DW()
;__Lib_System.c, 27 :: 		_CC2DL_Loop1:
_CC2DL_Loop1:
;__Lib_System.c, 28 :: 		TBLRD*+
0x0060	0x0009      	TBLRD*+
;__Lib_System.c, 29 :: 		MOVFF TABLAT, POSTINC1
0x0062	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c, 30 :: 		DECF   R0, 1
0x0066	0x0600      	DECF        R0, 1, 0
;__Lib_System.c, 31 :: 		BNZ _CC2DL_Loop1
0x0068	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c, 32 :: 		DECF   R1, 1
0x006A	0x0601      	DECF        R1, 1, 0
;__Lib_System.c, 33 :: 		BNZ _CC2DL_Loop1
0x006C	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c, 35 :: 		}
L_end___CC2DW:
0x006E	0x0012      	RETURN      0
; end of ___CC2DW
___FillZeros:
;__Lib_System.c, 18 :: 		void __FillZeros()
;__Lib_System.c, 20 :: 		while ( FSR0 > FSR1 )
L___FillZeros1:
0x0070	0x50EA      	MOVF        FSR0+1, 0 
0x0072	0x5CE2      	SUBWF       FSR1+1, 0 
0x0074	0xE102      	BNZ         L____FillZeros12
0x0076	0x50E9      	MOVF        FSR0, 0 
0x0078	0x5CE1      	SUBWF       FSR1, 0 
L____FillZeros12:
0x007A	0xE202      	BC          L___FillZeros2
;__Lib_System.c, 21 :: 		POSTINC1 = 0;
0x007C	0x6AE6      	CLRF        POSTINC1 
0x007E	0xD7F8      	BRA         L___FillZeros1
L___FillZeros2:
;__Lib_System.c, 22 :: 		}
L_end___FillZeros:
0x0080	0x0012      	RETURN      0
; end of ___FillZeros
_shift_left:
;main.c, 20 :: 		void shift_left() {
;main.c, 27 :: 		for(i = 0; i < 8; ++i){
0x0082	0x6A15      	CLRF        shift_left_i_L0 
L_shift_left0:
0x0084	0x0E08      	MOVLW       8
0x0086	0x5C15      	SUBWF       shift_left_i_L0, 0 
0x0088	0xE20F      	BC          L_shift_left1
;main.c, 28 :: 		LATC = (1 << i);
0x008A	0xF001C015  	MOVFF       shift_left_i_L0, R1
0x008E	0x0E01      	MOVLW       1
0x0090	0x6E00      	MOVWF       R0 
0x0092	0x5001      	MOVF        R1, 0 
L__shift_left11:
0x0094	0xE004      	BZ          L__shift_left12
0x0096	0x3600      	RLCF        R0, 1 
0x0098	0x9000      	BCF         R0, 0 
0x009A	0x0FFF      	ADDLW       255
0x009C	0xD7FB      	BRA         L__shift_left11
L__shift_left12:
0x009E	0xFF8BC000  	MOVFF       R0, LATC
;main.c, 29 :: 		Delay_100ms();
0x00A2	0xDFBC      	RCALL       _Delay_100ms
;main.c, 30 :: 		}
;main.c, 27 :: 		for(i = 0; i < 8; ++i){
0x00A4	0x2A15      	INCF        shift_left_i_L0, 1 
;main.c, 30 :: 		}
0x00A6	0xD7EE      	BRA         L_shift_left0
L_shift_left1:
;main.c, 31 :: 		}
L_end_shift_left:
0x00A8	0x0012      	RETURN      0
; end of _shift_left
0x00AA	0xF000EC60  	CALL        192, 0
_main:
;main.c, 41 :: 		int main(void)
;main.c, 43 :: 		TRISC = 0x00;
0x00AE	0x6A94      	CLRF        TRISC 
;main.c, 44 :: 		LATC = 0x01;
0x00B0	0x0E01      	MOVLW       1
0x00B2	0x6E8B      	MOVWF       LATC 
;main.c, 45 :: 		while (1) {
L_main6:
;main.c, 46 :: 		shift_left();
0x00B4	0xDFE6      	RCALL       _shift_left
;main.c, 47 :: 		Delay_100ms();
0x00B6	0xDFB2      	RCALL       _Delay_100ms
;main.c, 48 :: 		shift_right();
0x00B8	0xDFBE      	RCALL       _shift_right
;main.c, 49 :: 		Delay_100ms();
0x00BA	0xDFB0      	RCALL       _Delay_100ms
;main.c, 50 :: 		}
0x00BC	0xD7FB      	BRA         L_main6
;main.c, 51 :: 		}
L_end_main:
0x00BE	0xD7FF      	BRA         $+0
; end of _main
0x00C0	0x0012      	RETURN      0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [26]    _Delay_100ms
0x0036      [42]    _shift_right
0x0060      [16]    ___CC2DW
0x0070      [18]    ___FillZeros
0x0082      [40]    _shift_left
0x00AA      [22]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    shift_right_i_L0
0x0015       [1]    shift_left_i_L0
0x0F8B       [1]    LATC
0x0F94       [1]    TRISC
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE1       [2]    FSR1
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [2]    FSR0
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
